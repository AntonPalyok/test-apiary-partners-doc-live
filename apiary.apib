FORMAT: 1A
HOST: https://sandbox-api.mylimobiz.com/v0

# Partner API

## Overview

The Partner API allows 3rd-party services to interact programmatically with Limo Anywhere. Using the Partner API you interact with resources allowing for actions such as:

- Rate Lookup & Calculation.
- Reservation Creation/Modification/Cancellation.
- Notification Subscriptions.

The API accepts/returns JSON data and attempts to conform to the <a href="https://en.wikipedia.org/wiki/Representational_state_transfer">RESTful</a> design principles. You can interact with the resources exposed via the API by accessing resource collections and element URIs by using the HTTP verbs (GET, POST, PUT, and DELETE). 

## General Requirements

To use the Limo Anywhere Partner API, you must have an API authorization token from the token endpoint. See the <a href="#reference/authorization">Authorization documentation</a> for the authorization guide.

<b>Before you can generate an access token, you must agree to the API Terms of Service and receive a Client ID and Client Secret from Limo Anywhere.</b> 

If you have not done this and would like to use the API, please email api@limoanywhere.com

## HTTP Status Codes

| Status Code | Default Reason Phrase | Description |
|--------------------------|---------------------------|--------------------------------------------------------------------------------|
|200 | OK.| Request was processed successfully and the response contains entity body. |
|201 | Created | Request was processed successfully and the response contains `Location` header with URI of created resource. |
|202 | Accepted | Request was accepted but the server cannot determine whether the operation was successfully processed. |
|204 | No Content | Request was processed successfully and response doesn't contain entity body. |
|400 | Bad request | Request wasn't processed and the response contains entity body with description of the request errors. |
|401 | Unauthorized | Request wasn't processed because client didn't send `Authorization` header with valid scheme and parameter. |
|403 | Forbidden | Request wasn't processed because client didn't have enough permissions to access requested resource. |
|404 | Not Found | Request wasn't processed because requested resource is not existing. |
|409 | Conflict | Request wasn't processed because conflict was occurred. Response body will contain infomration about occurred conflict and reason phrase of the response may contain custom value which can be used by client to handle occurred conflict.  |
|429 | Too Many Requests Per Minute | Request count limit has been reached. `Retry-After` header will contain information about the time when the request query counter will be reset. |
|429 | Too Many Requests Per Day | Request count limit has been reached. `Retry-After` header will contain information about the time when the request query counter will be reset. |
|500 | Internal Server Error | Request wasn't processed because internal server error was occurred and the response contains `correlation_id` field which should be used for future investigation of the issue. |

## Getting Started

Follow the below steps to complete some of the most popular actions.

<b> Get Authorization to use the Partner API before doing anything else.</b>

1. Contact api@limoanywhere.com and receive your Client Id & Client Secret.
2. Use Client Id & Client Secret to generate an access token as described <a href="/#reference/authorization">here.</a>

Once you have completed the above, choose a sub-section to follow:

<b> Create a Booking</b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the Id of this rate from the `results` array.
2. Use the <a href="/#reference/booking/booking/booking">Booking</a> method. In `search_result_id` parameter set the rate Id of the desired rate and provide additional necessary information: passengers, flight information etc.

## Group Authorization
The API uses the <a href="https://tools.ietf.org/html/rfc6749"> OAuth 2.0 </a> protocol for simple, but effective authentication and authorization.
All API endpoints require an OAuth access token, thus we have exposed a service that will provide the user with an OAuth 2 Access token.
This token should be provided in the header in all requests.




## GET Access Token [/get]

We support authorization with a <b>Client Credentials Grant</b>. It allows access to general resources that do not need customer account authentication.

The tables below describe all possible request/response parameters of the Authentication process methods:

#####Request:

| Parameter | Description |
|------------------|-------------------------------------------------------------------------------------------------------------------------|
| grant_type | Type of Grant described above. Possible values: `client_credentials` or `refresh_token` |
| client_id | The client ID of your application |
| client_secret | The client Secret of your application |
| company_alias | The Alias of your company |
| username | Username or Email |
| password | Password |

#####Response:

| Parameter | Description |
|------------------|------------------------------------------------------------|
| access_token | Access Token |
| token_type | Token type (Always `bearer`) |
| expires_in | Expiration time of Access token (in seconds) |
| refresh_token | Refresh Token |


### Possible Authentication Errors

| Parameter | Description |
|-------------------------------|---------------------------------------------------------------|
| invalid_request | Required parameters were not provided |
| invalid_client | The Ð¡lient ID or Client secret provided is invalid |
| invalid_scope (not used now) | The scope parameter provided is not a valid subset of scopes |
| unsupported_grant_type | Unsupported Grand Type provided |


In 'execution' console you can see request/response samples, data types and sizes of parameters.

For getting an 'access_token', create the appropriate request. 
Parameter `grant_type` will depend on Authorization method:

### Client Credentials Grant [POST /oauth2/token]
`grant_type` = `client_credentials`

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "client_credentials",
                "client_id": "tpp_integration_test",
                "client_secret": "lcdLYzj7RaUgmRp7sVng4typD5JaBJ18Pkk2IrNSsds32",
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQrt8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600,
            }

## Refresh Access Token [/refresh]
Your access token will expire after a period of time and must be refreshed. Time until token expiration is provided in the `expired_in` parameter when receiving your token. <b>If you receive a 401 error, you may need to refresh your token.</b>


### Refresh [POST /oauth2/token]

+ Request

    + `grant_type` (string) Required. String length: inclusive between 0 and 50.
    + `refresh_token` (string) Required. String length: 20.
    + `client_id` (string) Required. String length: inclusive between 6 and 50.
    + `client_secret` (string) Required. String length: inclusive between 50 and 50.
 
    + Headers

            Content-Type: application/json

    + Body

            {
                "grant_type": "refresh_token",
                "refresh_token": "CSYE0W7dfedfrQFmC8GTQPL",
                "client_id": "tpp_integration_test",
                "client_secret": "lcdLYzj7RaUgmRp7sVng4typD5JaBJ18Pkk2IrNSsds32"
            }

+ Response 200 (application/json)
    
    + Body

            {
                "access_token": "YE0W7CSdfVaQFmC8GTQ1",
                "token_type": "bearer",
                "expires_in": 3600
            }


## Group Booking

Provides the following abilities:

- Return and choose pricing.
- Create reservations.
- Update existing reservations.
- Cancel existing reservations.

<b> Basic Steps for creating/updating a reservation: </b>

1. Call the <a href="/#reference/booking/rate-lookup/rate-lookup">Rate Lookup</a> method to get the pricing for your trip requirements. Choose the optimal pricing and hold the Id of this rate from the `results` array. To get a breakdown of the chosen rate, call the <a href="/#reference/booking/rate-lookup/get-rate-details">Get Rate Details</a> method.

2. Use the <a href="/#reference/booking/booking/booking">Booking</a> method. In `search_result_id` parameter set the rate Id of the desired rate and provide additional necessary information: passengers, flight information etc.
In booking request we accept `pickup_flight_info` and `dropoff_flight_info`. This can be useful if you would want to specify them after rate lookup.

3. To update an existing reservation use the <a href="/#reference/booking/booking/update-booking">Update Booking</a> method. Request information is the same as for `Booking` method.

4. To cancel an existing reservation use <a href="/#reference/reservations/cancel-reservation/cancel-reservation">Cancel</a>.

*You can create a booking with a minimal set of fields by using only required parameters.*



The tables below describe all possible request/response parameters for the Booking process methods:


#### *Rate Lookup* request parameters

| Name | Type |Required| Description |
|-----------------------------------------------|-----------|--------|--------------------------------------------------------------------------------------|
| executors | array | Yes* | Array of companies the offer is sent to. If not specified, 25 mile radius around PU will be applied to search for possible executors. (Requires only one item when you provide Executor Billing Contact Account Number) |
| executor_billing_contact_account_number | string | No | Executor Billing Contact Account Number. (If specified then only one executor should be provided) |
| vehicle_types | array | Yes | Array of vehicle types. Check possible values in the list below |
| scheduled_pickup_at | object | Yes | Pick up date and time |
| luggage_count | integer | No | Count of lagguage (Default value: 0) |
| passenger_count | integer | Yes | Count of passengers |
| infant_child_seat_count | integer | No | Count of "Infant" child seats (Default value: 0) |
| booster_child_seat_count | integer | No | Count of "Booster" child seats (Default value: 0) |
| toddler_child_seat_count | integer | No | Count of "Toddler" child seats (Default value: 0) |
| is_handicap_access_required | boolean | No | Is required handicap access (Default Value: false) |
| duration | integer | Yes* | Trip duration (In seconds). Required for hourly rides only |
| pickup | object | Yes | Pick Up location information |
| pickup.scheduled_arriving_at | object | No | Drop Off date and time |
| pickup.address | object | Yes | Pick Up address |
| pickup.address.name | string | No | Address name |
| pickup.address.phone | string | No | Phone |
| pickup.address.country_code | string | No | Country code |
| pickup.address.state_code | string | No | State code |
| pickup.address.postal_code | string | No | Postal/Zip code |
| pickup.address.city | string | No | City |
| pickup.address.address_line1 | string | No | Address Line 1 |
| pickup.address.address_line2 | string | No | Address Line 2 |
| pickup.address.latitude | float | Yes | Latitude |
| pickup.address.longitude | float | Yes | Longitude |
| pickup.flight | object | Yes* | Pick Up flight information (Required when pickup type is airport) |
| pickup.flight.airport_code | string | Yes | Airport code |
| pickup.flight.airline_code | string | No | Airline Code |
| pickup.flight.flight_number | string | No | Flight Number |
| pickup.flight.airport_pickup_option | object | No | Pick Up area (Possible values: `curbside`, `inside`) |
| pickup.udf | object | No | Key value dictionary of user defined fields |
| stops | object | No | Array of stops (Included objects same with `pickup`) |
| dropoff | object | No | Drop off location information (Included objects same with `pickup`) |

Check the list of supported `vehicle_types`:

- *economy_sedan*
- *hybrid_sedan*
- *vip_sedan*
- *sedan*
- *economy_suv*
- *hybrid_suv*
- *vip_suv*
- *suv*
- *mini_van*
- *passenger_van*
- *sprinter_van*
- *other_van*
- *limousine*
- *mini_bus*
- *party_bus*
- *coach_bus*
- *other_bus*
- *shared_vehicle*
- *other_vehicle*


#### *Rate Lookup* response parameters

| Name | Type | Description |
|-----------------------------------|-----------|---------------------------------------------------|
| results | array | Array of charge results |
| results[].search_result_id | integer | Search result Id (Is required for booking) |
| results[].executor | string | The company the reservation will be executed by |
| results[].vehicle_type | string | Vehicle type code |
| results[].vehicle_type_name | string | Vehicle type name |
| results[].vehicle_type_description | string | Vehicle type description |
| results[].vehicle_type_images | array | Array of links for vehicle type images |
| results[].passenger_capacity | integer | Passenger capacity |
| results[].luggage_capacity | integer | Luggage capacity |
| results[].is_handicap_accessible | boolean | Is handicap accessible |
| results[].currency_code | string | String code of the currency |
| results[].total_amount | float | Total rate amount |


#### *Get Rate Details* response parameters

| Name |Type |Description |
|-------------------------------------------------------|-----------|---------------------------------------------------|
| charges | array | Original charges |
| charges[].name | string | Charge name. Check possible names in the list below |
| charges[].value | float | Charge value |
| search_result_id | integer | Search result Id (Is required for booking) |
| executor | string | The company the reservation will be executed by | 
| vehicle_type | string | Vehicle type code |
| vehicle_type_name | string | Vehicle type name |
| vehicle_type_description | string | Vehicle type description |
| vehicle_type_images | array | Array of links for vehicle type images |
| passenger_capacity | integer | Passenger capacity |
| luggage_capacity | integer | Luggage capacity |
| is_handicap_accessible | boolean | Is handicap accessible |
| currency_code | string | String code of the currency |
| total_amount | float | Total rate amount |

Check the list of supported `charges`:

- *base_charge*
- *hourly_charge*
- *passenger_charge*
- *distance_charge*
- *gratuity_charge*
- *extra_gratuity*
- *stops_charge*
- *tolls*
- *surcharges*
- *parking*
- *miscellaneous_charge*
- *discount*
- *taxes*


#### *Booking*, *Update Booking* request parameters

| Name | Type |Required | Description |
|-----------------------------------------------|---------|---------|-------------------------------------------------------------------|
| search_result_id | integer | Yes | Id of choosed price from Rate Lookup response |
| passengers | array | Yes | List of passengers (Minimum 1 passenger) |
| passengers[].first_name | string | Yes | Passenger first name |
| passengers[].last_name | string | Yes | Passenger last name |
| passengers[].phone | string | Yes | Passenger phone |
| passengers[].email | string | Yes | Passenger email |
| pickup_flight_info | object | No | Pick Up flight information |
| pickup_flight_info.airline_code | string | No | Airline code |
| pickup_flight_info.flight_number | string | No | Flight number |
| dropoff_flight_info | object | No | Drop Off flight information (Included fields same with `pickup_flight_info`) |
| originator_udfs | object | No | Key value dictionary of user defined fields |
| originator_reference_number | string | Yes | The reference number of the reservation on originator side |


#### *Booking* response parameters

| Name |Type |Description |
|-------------------------------|-------|---------------------------------------------------|
| reservation_id | integer | Id of the reservation on executor side |
| executor_reference_number | string | The reference number of the reservation on executor side |
| executor_udfs | object | Key value dictionary of user defined fields from executor |

In 'execution' console you can see request/response samples, data types and sizes of parameters.

## Rate Lookup [/Rate Lookup]

### Rate Lookup [POST /partners/self/rate_lookup]
Allows you to see pricing for your trip requirements by returning a collection of charges.

 + Request
    + `executors[]` (optional, array[string]) 
        The count of elements should be less or equals to 5. 
    + `executor_billing_contact_account_number` (optional, string) 
        The value must be non-empty string with maximum length 50.''
    + `vehicle_types[]` (required, array[enum[string]]) 
        The count of elements should be greater or equals to 1. 
        The count of elements should be less or equals to 10. 
        + Members 
            + `economy_sedan` 
            + `hybrid_sedan` 
            + `vip_sedan` 
            + `sedan` 
            + `economy_suv` 
            + `hybrid_suv` 
            + `vip_suv` 
            + `suv` 
            + `mini_van` 
            + `passenger_van` 
            + `sprinter_van` 
            + `other_van` 
            + `limousine` 
            + `mini_bus` 
            + `party_bus` 
            + `coach_bus` 
            + `other_bus` 
            + `shared_vehicle` 
            + `other_vehicle` 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `luggage_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `infant_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `booster_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `toddler_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `duration` (optional, number) 
        The value must be integer which is not less than 60. 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `false` 
    + `pickup` (required, object) 
    + `pickup.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `pickup.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `pickup.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `pickup.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `pickup.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight` (optional, object) 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[]` (optional, array[object]) 
    + `stops[].scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `stops[].address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `stops[].address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `stops[].address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `stops[].address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight` (optional, object) 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff` (optional, object) 
    + `dropoff.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `dropoff.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `dropoff.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `dropoff.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `dropoff.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight` (optional, object) 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {  
           "executors":[  
              "dfw-limo",
              "dfw-limo-2"
           ],
           "vehicle_types":[  
              "sedan"
           ],
           "scheduled_pickup_at":"2019-12-22T15:00:00",
           "luggage_count":2,
           "passenger_count":2,
           "infant_child_seat_count":0,
           "booster_child_seat_count":1,
           "toddler_child_seat_count":0,
           "is_handicap_access_required":false,
           "pickup":{  
              "scheduled_arriving_at":"13:10:00",
              "address":{  
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "latitude":"40.76257",
                 "longitude":"-73.83143"
              }
           },
           "stops":[  
              {  
                 "address":{  
                    "latitude":40.70922,
                    "longitude":-74.0137558,
                    "country_code":"US",
                    "state_code":"NY",
                    "postal_code":"10006",
                    "city":"New York",
                    "address_line1":"123 Washington St"
                 }
              }
           ],
           "dropoff":{  
              "scheduled_arriving_at":"14:05:00",
              "address":{  
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "latitude":"40.76257",
                 "longitude":"-73.83143"
              }
           }
        } 

+ Response 200 
    + `results[]` (array[object]) 
    + `results[].search_result_id` (number) 
    + `results[].executor` (string) 
    + `results[].vehicle_type` (enum[string]) 
    + `results[].vehicle_type_name` (string) 
    + `results[].vehicle_type_description` (string) 
    + `results[].vehicle_type_images[]` (array[string]) 
    + `results[].passenger_capacity` (number) 
    + `results[].luggage_capacity` (number) 
    + `results[].is_handicap_accessible` (boolean) 
    + `results[].currency_code` (string) 
    + `results[].total_amount` (number) 
    + `errors[]` (array[object]) 
    + `errors[].executor` (string) 
    + `errors[].message` (string) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "results": [
                {
                    "search_result_id": 24,
                    "executor": "dfw-limo",
                    "vehicle_type": "sedan",
                    "vehicle_type_name": "Sedan Towncar",
                    "vehicle_type_images": [
                        "https://sandbox-manage.mylimobiz.com/Uploads/2/VehicleTypes/5/12720188234_8SlfFAa71Go60Nd5HTs2.jpg",
                        "https://sandbox-manage.mylimobiz.com/Uploads/2/VehicleTypes/5/12720188239_mRIt4XW331L25LA1NYiu.jpg"
                    ],
                    "passenger_capacity": 3,
                    "luggage_capacity": 3,
                    "is_handicap_accessible": false,
                    "currency_code": "USD",
                    "total_amount": 127.8
                },
                {
                    "search_result_id": 25,
                    "executor": "dfw-limo-2",
                    "vehicle_type": "sedan",
                    "vehicle_type_name": "Sedan Towncar",
                    "vehicle_type_images": [
                        "https://sandbox-manage.mylimobiz.com/Uploads/3/VehicleTypes/6/127201883445_fJAm15Pcc8Ea2E6w26bN.jpg"
                    ],
                    "passenger_capacity": 4,
                    "luggage_capacity": 2,
                    "is_handicap_accessible": false,
                    "currency_code": "USD",
                    "total_amount": 182.83
                }
            ]
        }

### Get Rate Details [GET /partners/self/rate_lookup/results/{id}]
Returns a detailed (breakdown) list of charges by search_id from the previous method.

+ Parameters
    + `id`: 24 (required, number)

+ Request

    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200
    + `charges[]` (array[object]) 
    + `charges[].details[]` (array[object]) 
    + `details[].name` (string) 
    + `details[].value` (number) 
    + `charges[].name` (enum[string]) 
    + `charges[].value` (number) 
    + `search_result_id` (number) 
    + `executor` (string) 
    + `vehicle_type` (enum[string]) 
    + `vehicle_type_name` (string) 
    + `vehicle_type_description` (string) 
    + `vehicle_type_images[]` (array[string]) 
    + `passenger_capacity` (number) 
    + `luggage_capacity` (number) 
    + `is_handicap_accessible` (boolean) 
    + `currency_code` (string) 
    + `total_amount` (number) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "charges": [
                {
                    "details": [
                        {
                            "name": "Flat Rate",
                            "value": 127.8
                        },
                        {
                            "name": "Per Unit",
                            "value": 0
                        },
                        {
                            "name": "OT/Wait Time",
                            "value": 0
                        },
                        {
                            "name": "Std Grat",
                            "value": 0
                        },
                        {
                            "name": "Voucher",
                            "value": 0
                        },
                        {
                            "name": "Fuel Surch",
                            "value": 0
                        },
                        {
                            "name": "STC Surch",
                            "value": 0
                        },
                        {
                            "name": "State Tax",
                            "value": 0
                        },
                        {
                            "name": "Std Tax 1",
                            "value": 0
                        },
                        {
                            "name": "Std Tax 2",
                            "value": 0
                        },
                        {
                            "name": "Discount",
                            "value": 0
                        },
                        {
                            "name": "Discount",
                            "value": 0
                        }
                    ],
                    "name": "base_charge",
                    "value": 127.8
                },
                {
                    "details": [
                        {
                            "name": "Per Hour",
                            "value": 0
                        }
                    ],
                    "name": "hourly_charge",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Per Pass",
                            "value": 0
                        }
                    ],
                    "name": "passenger_charge",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Per Mile",
                            "value": 0
                        }
                    ],
                    "name": "distance_charge",
                    "value": 0
                },
                {
                    "name": "gratuity_charge",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Extra Grat",
                            "value": 0
                        }
                    ],
                    "name": "extra_gratuity",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Extra Stops",
                            "value": 0
                        }
                    ],
                    "name": "stops_charge",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Tolls",
                            "value": 0
                        }
                    ],
                    "name": "tolls",
                    "value": 0
                },
                {
                    "name": "surcharges",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Parking",
                            "value": 0
                        }
                    ],
                    "name": "parking",
                    "value": 0
                },
                {
                    "details": [
                        {
                            "name": "Setup Fee",
                            "value": 0
                        },
                        {
                            "name": "Admin Fee",
                            "value": 0
                        },
                        {
                            "name": "Misc Fee 1",
                            "value": 0
                        },
                        {
                            "name": "Misc Fee 2",
                            "value": 0
                        },
                        {
                            "name": "Misc Fee 3",
                            "value": 0
                        }
                    ],
                    "name": "miscellaneous_charge",
                    "value": 0
                },
                {
                    "name": "discount",
                    "value": 0
                },
                {
                    "name": "taxes",
                    "value": 0
                }
            ],
            "search_result_id": 24,
            "executor": "dfw-limo",
            "vehicle_type": "sedan",
            "vehicle_type_name": "Sedan Towncar",
            "vehicle_type_images": [
                "https://sandbox-manage.mylimobiz.com/Uploads/2/VehicleTypes/5/12720188234_8SlfFAa71Go60Nd5HTs2.jpg",
                "https://sandbox-manage.mylimobiz.com/Uploads/2/VehicleTypes/5/12720188239_mRIt4XW331L25LA1NYiu.jpg"
            ],
            "passenger_capacity": 3,
            "luggage_capacity": 3,
            "is_handicap_accessible": false,
            "currency_code": "USD",
            "total_amount": 127.8
        }

## Booking [/Booking]

### Booking [POST /partners/self/bookings]
Creates new reservation using specified booking information and specified rate lookup information (`search_result_id`) which was accepted previously.

 + Request
    + `originator_reference_number` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `credit_card` (optional, object) 
    + `credit_card.card_number` (required, string) 
        The value must be non-empty string with maximum length 20. 
    + `credit_card.holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.holder_type` (optional, enum[string]) 
        + Default: `unknown` 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `credit_card.expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `credit_card.expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `credit_card.billing_address` (optional, object) 
    + `credit_card.billing_address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `credit_card.billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `credit_card.billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `search_result_id` (required, number) 
        The valus should be number inclusive between 1 and 9.22337203685478E+18. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[].email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `pickup_flight_info` (optional, object) 
    + `pickup_flight_info.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup_flight_info.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff_flight_info` (optional, object) 
    + `dropoff_flight_info.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff_flight_info.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `originator_udfs[]` (optional, array[object]) 
    
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {  
           "search_result_id":24,
           "passengers":[  
              {  
                 "first_name":"John",
                 "last_name":"Smith",
                 "phone":"+12312345678",
                 "email":"la.demo.john.smith@gmail.com"
              }
           ],
           "credit_card":{  
              "card_number":"4111111111111111",
              "holder_name":"John Smith",
              "holder_type":"personal",
              "expiration_year":2026,
              "expiration_month":9,
              "billing_address":{  
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "address_line2":""
              }
           },
           "notes":"I need bottle of water without gas.",
           "originator_reference_number":"94391091"
        }

+ Response 200
    + `reservation_id` (number) 
    + `executor_reference_number` (string) 
    + `executor_udfs[]` (array[object]) 
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "reservation_id": 377,
            "executor_reference_number": "11024"
        }


### Update Booking [PUT /partners/self/bookings/{id}]
Updates a reservation by reservation Id using specified booking information rate lookup information which was previously returned.

+ Parameters
    + `id`: 377 (required, number) 

+ Request
    + `credit_card_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `search_result_id` (required, number) 
        The valus should be number inclusive between 1 and 9.22337203685478E+18. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[].email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `pickup_flight_info` (optional, object) 
    + `pickup_flight_info.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup_flight_info.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff_flight_info` (optional, object) 
    + `dropoff_flight_info.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff_flight_info.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `originator_udfs[]` (optional, array[object]) 
    
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {  
           "search_result_id":24,
           "credit_card_id":363,
           "passengers":[  
              {  
                 "first_name":"James",
                 "last_name":"Brown",
                 "phone":"+12312345678",
                 "email":"la.demo.james.brown@gmail.com"
              }
           ],
           "pick_up_info":{  
              "airline_code":"AA",
              "flight_number":"10"
           }
        }

+ Response 202
+ Response 204


## Group Reservations

## Create Reservation [/Reservation/create]

### Create Reservation [POST /partners/self/reservations] 

Creates reservation for specified executor using originator price 

+ Request
    + `originator_reference_number` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `executor` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `executor_billing_contact_account_number` (optional, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact` (optional, object) 
    + `billing_contact.company_name` (optional, string) 
        The value must be non-empty string with maximum length 150. 
    + `billing_contact.first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `billing_contact.phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `billing_contact.email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `credit_card` (optional, object) 
    + `credit_card.card_number` (required, string) 
        The value must be non-empty string with maximum length 20. 
    + `credit_card.holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.holder_type` (optional, enum[string]) 
        + Default: `unknown` 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `credit_card.expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `credit_card.expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `credit_card.billing_address` (optional, object) 
    + `credit_card.billing_address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `credit_card.billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `credit_card.billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `credit_card.billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `credit_card.notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `charges[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `charges[].name` (required, enum[string]) 
        + Members 
            + `base_charge` 
            + `hourly_charge` 
            + `passenger_charge` 
            + `distance_charge` 
            + `gratuity_charge` 
            + `extra_gratuity` 
            + `stops_charge` 
            + `tolls` 
            + `surcharges` 
            + `parking` 
            + `miscellaneous_charge` 
            + `discount` 
            + `taxes` 
    + `charges[].value` (optional, number) 
        + Default: `0` 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `vehicle_type` (required, enum[string]) 
        + Members 
            + `economy_sedan` 
            + `hybrid_sedan` 
            + `vip_sedan` 
            + `sedan` 
            + `economy_suv` 
            + `hybrid_suv` 
            + `vip_suv` 
            + `suv` 
            + `mini_van` 
            + `passenger_van` 
            + `sprinter_van` 
            + `other_van` 
            + `limousine` 
            + `mini_bus` 
            + `party_bus` 
            + `coach_bus` 
            + `other_bus` 
            + `shared_vehicle` 
            + `other_vehicle` 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `scheduled_duration` (optional, number) 
        The value must be integer which is not less than 60. 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[].email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `pickup` (required, object) 
    + `pickup.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `pickup.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `pickup.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `pickup.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `pickup.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight` (optional, object) 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[]` (optional, array[object]) 
    + `stops[].scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `stops[].address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `stops[].address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `stops[].address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `stops[].address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight` (optional, object) 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff` (optional, object) 
    + `dropoff.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `dropoff.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `dropoff.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `dropoff.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `dropoff.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight` (optional, object) 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `currency_code` (required, string) 
        The value must be string with valid ISO 4217 currency alpha code. 
    + `luggage_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `false` 
    + `infant_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `booster_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `toddler_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `originator_udfs[]` (optional, array[object]) 
    
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {  
           "originator_reference_number":"94391091",
           "executor":"dfw-limo",
           "billing_contact":{  
              "company_name":"Aircraft Businesses for Sale",
              "first_name":"John",
              "last_name":"Smith",
              "phone":"+12312345678",
              "email":"la.demo.john.smith@gmail.com"
           },
           "credit_card":{  
              "card_number":"4111111111111111",
              "holder_name":"John Smith",
              "holder_type":"personal",
              "expiration_year":2026,
              "expiration_month":9,
              "billing_address":{  
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "address_line2":""
              }
           },
           "notes":"I need bottle of water without gas.",
           "charges":[  
              {  
                 "name":"base_charge",
                 "value":175.99
              }
           ],
           "vehicle_type":"sedan",
           "scheduled_pickup_at":"2019-12-23T13:33:23",
           "scheduled_duration":10800,
           "passenger_count":1,
           "passengers":[  
              {  
                 "first_name":"John",
                 "last_name":"Smith",
                 "phone":"+12312345678",
                 "email":"la.demo.john.smith@gmail.com"
              }
           ],
           "pickup":{  
              "scheduled_arriving_at":"13:28:23",
              "address":{  
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "latitude":"40.76257",
                 "longitude":"-73.83143"
              },
              "notes":"Passenger will wait for the phone call from driver."
           },
           "stops":[  
              {  
                 "address":{  
                    "latitude":40.70922,
                    "longitude":-74.0137558,
                    "country_code":"US",
                    "state_code":"NY",
                    "postal_code":"10006",
                    "city":"New York",
                    "address_line1":"123 Washington St"
                 }
              }
           ],
           "dropoff":{  
              "scheduled_arriving_at":"18:30:00",
              "address":{  
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "latitude":"40.76257",
                 "longitude":"-73.83143"
              }
           },
           "currency_code":"USD",
           "luggage_count":1,
           "is_handicap_access_required":false,
           "infant_child_seat_count":2
        }        

+ Response 200
    + `id` (number) 
    + `executor` (string) 
    + `state` (enum[string]) 
    + `state_reason` (enum[string]) 
    + `executor_billing_contact_number` (string) 
    + `actual_pickup_at` (string) 
    + `scheduled_dropoff_at` (string) 
    + `actual_dropoff_at` (string) 
    + `scheduled_on_spot_at` (string) 
    + `actual_on_spot_at` (string) 
    + `actual_duration` (number) 
    + `actual_garage_out_at` (string) 
    + `actual_garage_in_at` (string) 
    + `actual_driver_duration` (number) 
    + `distance` (number) 
    + `credit_card_id` (number) 
    + `credit_card` (object) 
    + `credit_card.card_number_first_digit` (string) 
    + `credit_card.card_number_last_digits` (string) 
    + `credit_card.card_network` (enum[string]) 
    + `credit_card.holder_name` (string) 
    + `credit_card.holder_type` (enum[string]) 
    + `credit_card.expiration_year` (number) 
    + `credit_card.expiration_month` (number) 
    + `credit_card.billing_address` (object) 
    + `credit_card.billing_address.name` (string) 
    + `credit_card.billing_address.country_code` (string) 
    + `credit_card.billing_address.state_code` (string) 
    + `credit_card.billing_address.postal_code` (string) 
    + `credit_card.billing_address.city` (string) 
    + `credit_card.billing_address.address_line1` (string) 
    + `credit_card.billing_address.address_line2` (string) 
    + `credit_card.notes` (string) 
    + `charges[]` (array[object]) 
    + `charges[].details[]` (array[object]) 
    + `details[].name` (string) 
    + `details[].value` (number) 
    + `charges[].name` (enum[string]) 
    + `charges[].value` (number) 
    + `total_amount` (number) 
    + `notes` (string) 
    + `driver` (object) 
    + `driver.portrait_url` (string) 
    + `driver.first_name` (string) 
    + `driver.last_name` (string) 
    + `driver.email` (string) 
    + `driver.phone` (string) 
    + `car` (object) 
    + `car.license_plate` (string) 
    + `car.make` (string) 
    + `car.year` (number) 
    + `car.model` (string) 
    + `car.color` (string) 
    + `car.phone` (string) 
    + `executor_reference_number` (string) 
    + `originator_reference_number` (string) 
    + `vehicle_type` (enum[string]) 
    + `scheduled_pickup_at` (string) 
    + `scheduled_duration` (number) 
    + `passenger_count` (number) 
    + `passengers[]` (array[object]) 
    + `passengers[].first_name` (string) 
    + `passengers[].last_name` (string) 
    + `passengers[].phone` (string) 
    + `passengers[].email` (string) 
    + `pickup` (object) 
    + `pickup.scheduled_arriving_at` (string) 
    + `pickup.address` (object) 
    + `pickup.address.latitude` (number) 
    + `pickup.address.longitude` (number) 
    + `pickup.address.name` (string) 
    + `pickup.address.country_code` (string) 
    + `pickup.address.state_code` (string) 
    + `pickup.address.postal_code` (string) 
    + `pickup.address.city` (string) 
    + `pickup.address.address_line1` (string) 
    + `pickup.address.address_line2` (string) 
    + `pickup.flight` (object) 
    + `pickup.flight.airport_code` (string) 
    + `pickup.flight.airline_code` (string) 
    + `pickup.flight.flight_number` (string) 
    + `pickup.flight.airport_pickup_option` (enum[string]) 
    + `pickup.notes` (string) 
    + `stops[]` (array[object]) 
    + `stops[].scheduled_arriving_at` (string) 
    + `stops[].address` (object) 
    + `stops[].address.latitude` (number) 
    + `stops[].address.longitude` (number) 
    + `stops[].address.name` (string) 
    + `stops[].address.country_code` (string) 
    + `stops[].address.state_code` (string) 
    + `stops[].address.postal_code` (string) 
    + `stops[].address.city` (string) 
    + `stops[].address.address_line1` (string) 
    + `stops[].address.address_line2` (string) 
    + `stops[].flight` (object) 
    + `stops[].flight.airport_code` (string) 
    + `stops[].flight.airline_code` (string) 
    + `stops[].flight.flight_number` (string) 
    + `stops[].flight.airport_pickup_option` (enum[string]) 
    + `stops[].notes` (string) 
    + `dropoff` (object) 
    + `dropoff.scheduled_arriving_at` (string) 
    + `dropoff.address` (object) 
    + `dropoff.address.latitude` (number) 
    + `dropoff.address.longitude` (number) 
    + `dropoff.address.name` (string) 
    + `dropoff.address.country_code` (string) 
    + `dropoff.address.state_code` (string) 
    + `dropoff.address.postal_code` (string) 
    + `dropoff.address.city` (string) 
    + `dropoff.address.address_line1` (string) 
    + `dropoff.address.address_line2` (string) 
    + `dropoff.flight` (object) 
    + `dropoff.flight.airport_code` (string) 
    + `dropoff.flight.airline_code` (string) 
    + `dropoff.flight.flight_number` (string) 
    + `dropoff.flight.airport_pickup_option` (enum[string]) 
    + `dropoff.notes` (string) 
    + `currency_code` (string) 
    + `luggage_count` (number) 
    + `is_handicap_access_required` (boolean) 
    + `infant_child_seat_count` (number) 
    + `booster_child_seat_count` (number) 
    + `toddler_child_seat_count` (number) 
    + `originator_udfs[]` (array[object]) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {  
           "id":378,
           "executor":"dfw-limo",
           "state":"created",
           "state_reason":"undefined",
           "scheduled_dropoff_at":"2019-12-23T16:33:00",
           "credit_card_id":364,
           "credit_card":{  
              "card_number_first_digit":"4",
              "card_number_last_digits":"1111",
              "card_network":"visa",
              "holder_name":"John Smith",
              "holder_type":"personal",
              "expiration_year":2026,
              "expiration_month":9,
              "billing_address":{  
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St"
              }
           },
           "charges":[  
              {  
                 "details":[  
                    {  
                       "name":"Flat Rate",
                       "value":175.99
                    }
                 ],
                 "name":"base_charge",
                 "value":175.99
              }
           ],
           "total_amount":175.99,
           "notes":"--- Partner Notes Start ---\r\n\r\nI need bottle of water without gas.\r\n\r\nBilling Contact Email:la.demo.john.smith@gmail.com Phone:+12312345678\r\n--- Partner Notes End ---",
           "executor_reference_number":"11025",
           "originator_reference_number":"94391091",
           "vehicle_type":"sedan",
           "scheduled_pickup_at":"2019-12-23T13:33:00",
           "scheduled_duration":10800,
           "passenger_count":1,
           "passengers":[  
              {  
                 "first_name":"John",
                 "last_name":"Smith",
                 "phone":"+12312345678",
                 "email":"la.demo.john.smith@gmail.com"
              }
           ],
           "pickup":{  
              "scheduled_arriving_at":"13:28:23",
              "address":{  
                 "latitude":40.76257,
                 "longitude":-73.83143,
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St"
              },
              "notes":"Passenger will wait for the phone call from driver."
           },
           "stops":[  
              {  
                 "address":{  
                    "latitude":40.70922,
                    "longitude":-74.0137558,
                    "country_code":"US",
                    "state_code":"NY",
                    "postal_code":"10006",
                    "city":"New York",
                    "address_line1":"123 Washington St"
                 }
              }
           ],
           "dropoff":{  
              "scheduled_arriving_at":"18:30:00",
              "address":{  
                 "latitude":40.76257,
                 "longitude":-73.83143,
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St"
              }
           },
           "currency_code":"USD",
           "luggage_count":1,
           "is_handicap_access_required":false,
           "infant_child_seat_count":2,
           "booster_child_seat_count":0,
           "toddler_child_seat_count":0
        } 

## Update Reservation [/Reservation/update]

### Update Reservation [PUT /partners/self/reservations/{id}] 
Updates the reservation by reservation ID.
In most of the cases the API will return responses with <b>204 No Content</b> or <b>200 OK</b> HTTP status codes, but if reservation update should be confirmed by the operator, the API will return response with <b>202 Accepted</b> HTTP status code.
If update request was accepted by the operator 'reservation.update_accepted' event will occur.
If update request was rejected by the operator 'reservation.update_rejected' event will occur.
A client application may send multiple updates before an operator will accept or reject previous updates.
In this case, an operator will handle these updates as single update request and the associated event will occur only one time.

+ Parameters
    + `id`: 378 (required, number) 

+ Request
    + `credit_card_id` (optional, number) 
        The value must be integer which is not less than 1. 
    + `charges[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `charges[].name` (required, enum[string]) 
        + Members 
            + `base_charge` 
            + `hourly_charge` 
            + `passenger_charge` 
            + `distance_charge` 
            + `gratuity_charge` 
            + `extra_gratuity` 
            + `stops_charge` 
            + `tolls` 
            + `surcharges` 
            + `parking` 
            + `miscellaneous_charge` 
            + `discount` 
            + `taxes` 
    + `charges[].value` (optional, number) 
        + Default: `0` 
    + `vehicle_type` (required, enum[string]) 
        + Members 
            + `economy_sedan` 
            + `hybrid_sedan` 
            + `vip_sedan` 
            + `sedan` 
            + `economy_suv` 
            + `hybrid_suv` 
            + `vip_suv` 
            + `suv` 
            + `mini_van` 
            + `passenger_van` 
            + `sprinter_van`
            + `other_van` 
            + `limousine` 
            + `mini_bus` 
            + `party_bus` 
            + `coach_bus` 
            + `other_bus` 
            + `shared_vehicle` 
            + `other_vehicle` 
    + `scheduled_pickup_at` (required, string) 
        The value must be the string with date&time in ISO 8601 format between '1753-01-01T00:00:00' and '9999-12-31T23:59:59'.
    + `scheduled_duration` (optional, number) 
        The value must be integer which is not less than 60. 
    + `passenger_count` (required, number) 
        The value must be integer which is not less than 1. 
    + `passengers[]` (required, array[object]) 
        The count of elements should be greater or equals to 1. 
    + `passengers[].first_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].last_name` (required, string) 
        The value must be non-empty string with maximum length 50. 
    + `passengers[].phone` (optional, string) 
        The value must be a string with a existing phone number in E.164 format. 
    + `passengers[].email` (optional, string) 
        The value must be string with email address. 
        The value must be non-empty string with maximum length 255. 
    + `pickup` (required, object) 
    + `pickup.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `pickup.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `pickup.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `pickup.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `pickup.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `pickup.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `pickup.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `pickup.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `pickup.flight` (optional, object) 
    + `pickup.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `pickup.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `pickup.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `pickup.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `pickup.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `stops[]` (optional, array[object]) 
    + `stops[].scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `stops[].address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `stops[].address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `stops[].address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `stops[].address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `stops[].address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `stops[].address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `stops[].address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `stops[].flight` (optional, object) 
    + `stops[].flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `stops[].flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `stops[].flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `stops[].flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `stops[].notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `dropoff` (optional, object) 
    + `dropoff.scheduled_arriving_at` (optional, string) 
        The value must be the string with time in ISO 8601 format between '00:00:00' and 23:59:59. 
    + `dropoff.address` (required, object) 
        Latitude and Longitude cannot be zero at the same time. 
    + `dropoff.address.latitude` (optional, number) 
        The value must be the decimal which inclusive between -90 and 90. 
        + Default: `0` 
    + `dropoff.address.longitude` (optional, number) 
        The value must be the decimal which inclusive between -180 and 180. 
        + Default: `0` 
    + `dropoff.address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `dropoff.address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `dropoff.address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `dropoff.address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `dropoff.flight` (optional, object) 
    + `dropoff.flight.airport_code` (optional, string) 
        The value must be string with valid airport IATA or ICAO code. 
    + `dropoff.flight.airline_code` (optional, string) 
        The value must be string with valid airline IATA or ICAO code. 
    + `dropoff.flight.flight_number` (optional, string) 
        The value must be string with flight number digits. 
    + `dropoff.flight.airport_pickup_option` (optional, enum[string]) 
        + Default: `none` 
        + Members 
            + `none` 
            + `curbside` 
            + `inside` 
    + `dropoff.notes` (optional, string) 
        The value must be non-empty string with maximum length 4000. 
    + `currency_code` (required, string) 
        The value must be string with valid ISO 4217 currency alpha code. 
    + `luggage_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `is_handicap_access_required` (optional, boolean) 
        + Default: `false` 
    + `infant_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `booster_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `toddler_child_seat_count` (optional, number) 
        The value must be integer which is not less than 0. 
        + Default: `0` 
    + `originator_udfs[]` (optional, array[object]) 
    
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {  
           "scheduled_pickup_at":"2019-12-19T03:02:41",
           "passenger_count":1,
           "passengers":[  
              {  
                 "first_name":"James",
                 "last_name":"Brown",
                 "phone":"+12312345678",
                 "email":"la.demo.james.brown@gmail.com"
              }
           ],
           "pickup":{  
              "scheduled_arriving_at":"13:10:00",
              "address":{  
                 "name":"John F Kennedy International Airport",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11430",
                 "latitude":"40.63975",
                 "longitude":"-73.77892"
              },
              "flight":{  
                 "airport_code":"JFK",
                 "airline_code":"AA",
                 "flight_number":"10",
                 "airport_pickup_option":"none"
              }
           },
           "dropoff":{  
              "scheduled_arriving_at":"14:05:00",
              "address":{  
                 "name":"123 Main St",
                 "country_code":"US",
                 "state_code":"NY",
                 "postal_code":"11354",
                 "city":"Queens",
                 "address_line1":"123 Main St",
                 "latitude":"40.76257",
                 "longitude":"-73.83143"
              }
           },
           "currency_code":"USD",
           "charges":[  
              {  
                 "name":"base_charge",
                 "value":1000
              },
              {  
                 "name":"hourly_charge",
                 "value":22
              },
              {  
                 "name":"passenger_charge",
                 "value":33
              },
              {  
                 "name":"distance_charge",
                 "value":44
              },
              {  
                 "name":"gratuity_charge",
                 "value":55
              },
              {  
                 "name":"extra_gratuity",
                 "value":66
              },
              {  
                 "name":"stops_charge",
                 "value":77
              },
              {  
                 "name":"tolls",
                 "value":88
              },
              {  
                 "name":"surcharges",
                 "value":99
              },
              {  
                 "name":"parking",
                 "value":11
              },
              {  
                 "name":"miscellaneous_charge",
                 "value":12
              },
              {  
                 "name":"discount",
                 "value":13
              },
              {  
                 "name":"taxes",
                 "value":14
              }
           ],
           "vehicle_type":"sedan",
           "pick_up_info":{  
              "airline_code":"AA",
              "flight_number":"180"
           },
           "originator_reference_number":"94391091"
        }

+ Response 202
+ Response 204

## Get Reservation [/Reservation/get]

### Get Reservation [GET /partners/self/reservations/{id}] 

Returns detailed reservation info

+ Parameters
    + `id`: 378 (required, number) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200
    + `id` (number) 
    + `executor` (string) 
    + `state` (enum[string]) 
    + `state_reason` (enum[string]) 
    + `executor_billing_contact_number` (string) 
    + `actual_pickup_at` (string) 
    + `scheduled_dropoff_at` (string) 
    + `actual_dropoff_at` (string) 
    + `scheduled_on_spot_at` (string) 
    + `actual_on_spot_at` (string) 
    + `actual_duration` (number) 
    + `actual_garage_out_at` (string) 
    + `actual_garage_in_at` (string) 
    + `actual_driver_duration` (number) 
    + `distance` (number) 
    + `credit_card_id` (number) 
    + `credit_card` (object) 
    + `credit_card.card_number_first_digit` (string) 
    + `credit_card.card_number_last_digits` (string) 
    + `credit_card.card_network` (enum[string]) 
    + `credit_card.holder_name` (string) 
    + `credit_card.holder_type` (enum[string]) 
    + `credit_card.expiration_year` (number) 
    + `credit_card.expiration_month` (number) 
    + `credit_card.billing_address` (object) 
    + `credit_card.billing_address.name` (string) 
    + `credit_card.billing_address.country_code` (string) 
    + `credit_card.billing_address.state_code` (string) 
    + `credit_card.billing_address.postal_code` (string) 
    + `credit_card.billing_address.city` (string) 
    + `credit_card.billing_address.address_line1` (string) 
    + `credit_card.billing_address.address_line2` (string) 
    + `credit_card.notes` (string) 
    + `charges[]` (array[object]) 
    + `charges[].details[]` (array[object]) 
    + `details[].name` (string) 
    + `details[].value` (number) 
    + `charges[].name` (enum[string]) 
    + `charges[].value` (number) 
    + `total_amount` (number) 
    + `notes` (string) 
    + `driver` (object) 
    + `driver.portrait_url` (string) 
    + `driver.first_name` (string) 
    + `driver.last_name` (string) 
    + `driver.email` (string) 
    + `driver.phone` (string) 
    + `car` (object) 
    + `car.license_plate` (string) 
    + `car.make` (string) 
    + `car.year` (number) 
    + `car.model` (string) 
    + `car.color` (string) 
    + `car.phone` (string) 
    + `executor_reference_number` (string) 
    + `originator_reference_number` (string) 
    + `vehicle_type` (enum[string]) 
    + `scheduled_pickup_at` (string) 
    + `scheduled_duration` (number) 
    + `passenger_count` (number) 
    + `passengers[]` (array[object]) 
    + `passengers[].first_name` (string) 
    + `passengers[].last_name` (string) 
    + `passengers[].phone` (string) 
    + `passengers[].email` (string) 
    + `pickup` (object) 
    + `pickup.scheduled_arriving_at` (string) 
    + `pickup.address` (object) 
    + `pickup.address.latitude` (number) 
    + `pickup.address.longitude` (number) 
    + `pickup.address.name` (string) 
    + `pickup.address.country_code` (string) 
    + `pickup.address.state_code` (string) 
    + `pickup.address.postal_code` (string) 
    + `pickup.address.city` (string) 
    + `pickup.address.address_line1` (string) 
    + `pickup.address.address_line2` (string) 
    + `pickup.flight` (object) 
    + `pickup.flight.airport_code` (string) 
    + `pickup.flight.airline_code` (string) 
    + `pickup.flight.flight_number` (string) 
    + `pickup.flight.airport_pickup_option` (enum[string]) 
    + `pickup.notes` (string) 
    + `stops[]` (array[object]) 
    + `stops[].scheduled_arriving_at` (string) 
    + `stops[].address` (object) 
    + `stops[].address.latitude` (number) 
    + `stops[].address.longitude` (number) 
    + `stops[].address.name` (string) 
    + `stops[].address.country_code` (string) 
    + `stops[].address.state_code` (string) 
    + `stops[].address.postal_code` (string) 
    + `stops[].address.city` (string) 
    + `stops[].address.address_line1` (string) 
    + `stops[].address.address_line2` (string) 
    + `stops[].flight` (object) 
    + `stops[].flight.airport_code` (string) 
    + `stops[].flight.airline_code` (string) 
    + `stops[].flight.flight_number` (string) 
    + `stops[].flight.airport_pickup_option` (enum[string]) 
    + `stops[].notes` (string) 
    + `dropoff` (object) 
    + `dropoff.scheduled_arriving_at` (string) 
    + `dropoff.address` (object) 
    + `dropoff.address.latitude` (number) 
    + `dropoff.address.longitude` (number) 
    + `dropoff.address.name` (string) 
    + `dropoff.address.country_code` (string) 
    + `dropoff.address.state_code` (string) 
    + `dropoff.address.postal_code` (string) 
    + `dropoff.address.city` (string) 
    + `dropoff.address.address_line1` (string) 
    + `dropoff.address.address_line2` (string) 
    + `dropoff.flight` (object) 
    + `dropoff.flight.airport_code` (string) 
    + `dropoff.flight.airline_code` (string) 
    + `dropoff.flight.flight_number` (string) 
    + `dropoff.flight.airport_pickup_option` (enum[string]) 
    + `dropoff.notes` (string) 
    + `currency_code` (string) 
    + `luggage_count` (number) 
    + `is_handicap_access_required` (boolean) 
    + `infant_child_seat_count` (number) 
    + `booster_child_seat_count` (number) 
    + `toddler_child_seat_count` (number) 
    + `originator_udfs[]` (array[object]) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "id": 378,
            "executor": "dfw-limo",
            "state": "driver_is_closing_job",
            "state_reason": "undefined",
            "scheduled_dropoff_at": "2019-12-09T04:02:00",
            "scheduled_on_spot_at": "2019-12-08T15:05:00",
            "actual_garage_out_at": "2019-12-08T15:00:00",
            "actual_garage_in_at": "2019-12-09T16:30:00",
            "actual_driver_duration": 91800,
            "credit_card_id": 365,
            "credit_card": {
                "card_number_first_digit": "4",
                "card_number_last_digits": "1111",
                "card_network": "visa",
                "holder_name": "Josh Smith",
                "holder_type": "personal",
                "expiration_year": 2026,
                "expiration_month": 6,
                "billing_address": {
                    "state_code": "NY",
                    "postal_code": "11354",
                    "address_line1": "123 Main St"
                }
            },
            "total_amount": 0,
            "notes": "--- Partner Notes Start ---\r\n\r\nI need bottle of water without gas.\r\n\r\nBilling Contact Email:la.demo.john.smith@gmail.com Phone:+12312345678\r\n--- Partner Notes End ---",
            "driver": {
                "portrait_url": "https://sandbox-manage.mylimobiz.com/Uploads/2/Drivers/2/127201881053_qu4xoc0nnipksoeiqc48.jpg",
                "first_name": "Brandon",
                "last_name": "Stark",
                "phone": "+14157778844"
            },
            "car": {
                "license_plate": "WFY-8231",
                "make": "Pontiac",
                "model": "Firebird",
                "color": "Black",
                "phone": "+12313232232"
            },
            "executor_reference_number": "11025",
            "originator_reference_number": "94391091",
            "vehicle_type": "sedan",
            "scheduled_pickup_at": "2019-12-09T03:02:00",
            "scheduled_duration": 3600,
            "passenger_count": 1,
            "passengers": [
                {
                    "first_name": "AhsXXXXXXXXXmed",
                    "last_name": "Stronk",
                    "phone": "+380938124760",
                    "email": "ahmed@Ahmed.net"
                }
            ],
            "pickup": {
                "scheduled_arriving_at": "13:10:00",
                "address": {
                    "latitude": 40.63975,
                    "longitude": -73.77892,
                    "name": "John F Kennedy International Airport",
                    "country_code": "US",
                    "state_code": "NY",
                    "postal_code": "11430"
                },
                "flight": {
                    "airport_code": "JFK",
                    "airline_code": "AA",
                    "flight_number": "10",
                    "airport_pickup_option": "none"
                }
            },
            "dropoff": {
                "scheduled_arriving_at": "14:05:00",
                "address": {
                    "latitude": 40.76257,
                    "longitude": -73.83143,
                    "name": "123 Main St",
                    "country_code": "US",
                    "state_code": "NY",
                    "postal_code": "11354",
                    "city": "Queens",
                    "address_line1": "123 Main St"
                }
            },
            "currency_code": "AED",
            "luggage_count": 1,
            "is_handicap_access_required": false,
            "infant_child_seat_count": 0,
            "booster_child_seat_count": 0,
            "toddler_child_seat_count": 2,
            "originator_udfs": {
                "key": "value"
            }
        } 

## Cancel Reservation [/Reservation/cancel]

### Cancel Reservation [PUT /partners/self/reservations/{id}/cancel] 

Cancels the reservation on behalf of affiliate. 

+ Parameters
    + `id`: 378 (required, number) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 204

## Reservation Payment [/Reservation/credit_card]

### Get List of Reservation Credit Cards [GET /partners/self/reservations/{reservation_id}/credit_cards?sort_by={sort_by}&sort_order={sort_order}&page_index={page_index}&page_size={page_size}] 
Returns credit card.

+ Parameters
    + `reservation_id`: 378 (required, number) 
    + `sort_by` (optional, enum[string]) 
        + Members 
            + `number` 
            + `expiration_date` 
            + `holder_name` 
            + `preference` 
    + `sort_order` (optional, enum[string]) 
        + Members 
            + `asc` 
            + `desc` 
    + `page_index`: 1 (optional, number) 
    + `page_size`: 20 (optional, number) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200
    + `total_count` (number) 
    + `items[]` (array[object]) 
    + `items[].id` (number) 
    + `items[].holder_name` (string) 
    + `items[].holder_type` (enum[string]) 
    + `items[].card_number_first_digit` (string) 
    + `items[].card_number_last_digits` (string) 
    + `items[].card_network` (enum[string]) 
    + `items[].expiration_year` (number) 
    + `items[].expiration_month` (number) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "total_count": 1,
            "items": [
                {
                    "id": 363,
                    "holder_name": "John Smith",
                    "holder_type": "personal",
                    "card_number_first_digit": "4",
                    "card_number_last_digits": "1111",
                    "card_network": "visa",
                    "expiration_year": 2026,
                    "expiration_month": 9
                }
            ]
        }

### Get Credit Card [GET /partners/self/reservations/{reservation_id}/credit_cards/{id}] 
Returns credit card.

+ Parameters
    + `reservation_id`: 378 (required, number) 
    + `id`: 363 (required, number) 

+ Request
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200
    + `id` (number) 
    + `card_number_first_digit` (string) 
    + `card_number_last_digits` (string) 
    + `card_network` (enum[string]) 
    + `holder_name` (string) 
    + `holder_type` (enum[string]) 
    + `expiration_year` (number) 
    + `expiration_month` (number) 
    + `billing_address` (object) 
    + `billing_address.name` (string) 
    + `billing_address.country_code` (string) 
    + `billing_address.state_code` (string) 
    + `billing_address.postal_code` (string) 
    + `billing_address.city` (string) 
    + `billing_address.address_line1` (string) 
    + `billing_address.address_line2` (string) 
    + `notes` (string) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "id": 363,
            "card_number_first_digit": "4",
            "card_number_last_digits": "1111",
            "card_network": "visa",
            "holder_name": "John Smith",
            "holder_type": "personal",
            "expiration_year": 2026,
            "expiration_month": 9,
            "billing_address": {
                "country_code": "US",
                "state_code": "NY",
                "postal_code": "11354",
                "city": "Queens",
                "address_line1": "123 Main St"
            }
        }

### Create Credit Card [POST /partners/self/reservations/{reservation_id}/credit_cards] 
Adds new credit card to the list of reservation credit cards.
If you want to put newely created CC as default to reservation you should send `credit_card_id` via <a href="/#reference/reservations/update-reservation">Update Reservation</a>..  

+ Parameters
    + `reservation_id`: 378 (required, number) 

+ Request
    + `card_number` (required, string) 
        The value must be non-empty string with maximum length 20. 
    + `holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `holder_type` (optional, enum[string]) 
        + Default: `unknown` 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `billing_address` (optional, object) 
    + `billing_address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
        {
            "card_number": "4111111111111111",
            "holder_name": "John Smith",
            "holder_type": "personal",
            "expiration_year": 2026,
            "expiration_month": 9,
            "billing_address": {
            "country_code": "US",
                   "state_code": "NY",
                   "postal_code": "11354",
                   "city": "Queens",
                   "address_line1": "123 Main St",
                   "address_line2": ""
            } 
        }

+ Response 200
    + `id` (number) 
    + `card_number_first_digit` (string) 
    + `card_number_last_digits` (string) 
    + `card_network` (enum[string]) 
    + `holder_name` (string) 
    + `holder_type` (enum[string]) 
    + `expiration_year` (number) 
    + `expiration_month` (number) 
    + `billing_address` (object) 
    + `billing_address.name` (string) 
    + `billing_address.country_code` (string) 
    + `billing_address.state_code` (string) 
    + `billing_address.postal_code` (string) 
    + `billing_address.city` (string) 
    + `billing_address.address_line1` (string) 
    + `billing_address.address_line2` (string) 
    + `notes` (string) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 
        
    + Body 
        {
            "id": 364,
            "card_number_first_digit": "4",
            "card_number_last_digits": "1111",
            "card_network": "visa",
            "holder_name": "John Smith",
            "holder_type": "personal",
            "expiration_year": 2026,
            "expiration_month": 9,
            "billing_address": {
                "country_code": "US",
                "state_code": "NY",
                "postal_code": "11354",
                "city": "Queens",
                "address_line1": "123 Main St"
            }
        } 

### Edit Credit Card [PUT /partners/self/reservations/{reservation_id}/credit_cards/{id}] 
Edit credit card.

+ Parameters
    + `reservation_id`: 378 (required, number) 
    + `id`: 364 (required, number) 

+ Request
    + `holder_name` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `holder_type` (optional, enum[string]) 
        + Default: `unknown` 
        + Members 
            + `unknown` 
            + `personal` 
            + `business` 
    + `expiration_year` (required, number) 
        The valus should be number inclusive between 1 and 9999. 
    + `expiration_month` (required, number) 
        The valus should be number inclusive between 1 and 12. 
    + `billing_address` (optional, object) 
    + `billing_address.name` (optional, string) 
        The value must be non-empty string with maximum length 500. 
    + `billing_address.country_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.state_code` (optional, string) 
        The value must be non-empty string with maximum length 5. 
    + `billing_address.postal_code` (optional, string) 
        The value must be non-empty string with maximum length 15. 
    + `billing_address.city` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line1` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `billing_address.address_line2` (optional, string) 
        The value must be non-empty string with maximum length 250. 
    + `notes` (optional, string) 
        The value must be non-empty string with maximum length 500. 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 
        
    + Body 
       {
          "holder_name": "James Brown",
          "holder_type": "personal",
          "expiration_year": 2022,
          "expiration_month": 7,
          "billing_address": {
                "country_code": "US",
                "state_code": "NY",
                "postal_code": "11354",
                "city": "Queens",
                "address_line1": "123 Main St"
          },
          "notes": "Do not charge immidiatelly."
        }

+ Response 204

## Group Notification Subscriptions

Partners can subscribe to receive notifications about reservation events via <a href="/#reference/notification-subscriptions/web-hook">Web Hooks</a>.

The tables below describe all possible request/response parameters for the Subscription process methods:

#### *Create Web Hook Subscription* request parameters

| Name | Type | Required | Description |
|-----------------------------------------------|-----------|--------|--------------------------------------------------------------------------------------|
| url | string | Yes | Notification will be sent to this endpoint |
| events | object | Yes | List of events to subscribe on |

Check the table of supported `events`:

| Event | Description |
|---------------------|----------------------------------------|
| reservation.accepted | Executor accepted the reservation. |
| reservation.rejected | Executor rejected the reservation. After this event, any processing of reservation will be suppressed. |
| reservation.assigned | Driver has been assigned to the reservation. Payload of webhook for this event may contain driver and car information. |
| reservation.update_accepted | Operator accepted update requests of reservation. Update requests which were sent previously were applied to the reservation. |
| reservation.update_rejected | Operator rejected update requests of reservation. Update requests which were sent previously were not applied to the reservation. |
| reservation.unassigned | Driver has been unassigned from the reservation. After this event previously accepted driver and car information becomes irrelevant. |
| reservation.driver_is_on_the_way | Driver is on the way to pick-up location. Payload of webhook for this event may contain driver and car information. |
| reservation.driver_is_at_pickup | Driver has arrived at the pick-up location. Payload of webhook for this event may contain driver and car information. |
| reservation.driver_is_waiting_at_pickup | Driver has started waiting for passenger at pickup location (additional fee may be included in final charges). |
| reservation.driver_is_waiting_for_passenger_started | Driver has started waiting for passenger at current location (additional fee may be include in final charges). |
| reservation.driver_is_waiting_for_passenger_stopped | Driver has stopped waiting for passenger at current location. |
| reservation.passenger_in_car | Passenger has been picked up. |
| reservation.passenger_dropped_off | Passenger has been dropped off. |
| reservation.cancelled | Reservation has been cancelled. |
| reservation.closed | Reservatoin has been closed. Payload for this event will contain final charges. After this event, any processing of reservation will be suppressed. |

The list of events may be extended in future.

The table below describes all possible parameters of <a href="/#reference/notification-subscriptions/web-hook">Web Hook</a> notification.

| Name | Type | Description |
|------|------|-------------|
| id | number | Reservation ID. |
| event | string | Reservation event which was occurred. |
| event_occurred_at | string | The UTC timestamp of reservation event which was occurred. |
| executor_reference_number | string | Reference number for the reservation on executor's side. |
| originator_reference_number | string | Reference number for the reservation on originator's side. |
| state | string | Current reservation state. It is not the same as event. |
| state_reason | string | The reservation state reason. |
| driver_phone | string | Driver phone number in E.164 format. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| driver_first_name | string | Driver first name. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| driver_last_name | string | Driver last name. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| car_licence_plate | string | Car license plate. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| car_color | string | Car color. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| car_make | string | Car make. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| car_model | string | Car model. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| car_year | number | Year when the car was manufactured. May be sent on `reservation.assigned`, `reservation.driver_is_on_the_way` and `reservation.driver_is_at_pickup` events. |
| actual_pickup_at | datetime | Sent only on `reservation.closed` event. |
| scheduled_pickup_at | datetime |Sent only on `reservation.closed` event. |
| scheduled_duration | number | Sent only on `reservation.closed` event. |
| scheduled_dropoff_at | datetime | Sent only on `reservation.closed` event. |
| actual_dropoff_at | datetime | Sent only on `reservation.closed` event. |
| scheduled_on_spot_at | datetime | Sent only on `reservation.closed` event. |
| actual_on_spot_at | datetime | Sent only on `reservation.closed` event. |
| actual_duration | number | Sent only on `reservation.closed` event. |
| actual_garage_out_at | datetime | Sent only on `reservation.closed` event. |
| actual_garage_in_at | datetime | Sent only on `reservation.closed` event. |
| actual_driver_duration | number | Sent only on `reservation.closed` event. |
| charges | array | Array of final charges. Sent only on `reservation.closed` event. |
| charges[].name | string | Charge name. Sent only on `reservation.closed` event. |
| charges[].value | number | Charge value. Sent only on `reservation.closed` event. |
| charges[].details | number | Charge details. Sent only on `reservation.closed` event. |
| charges[].details[].name | string | Charge details name. Sent only on `reservation.closed` event. |
| charges[].details[].value | number | Charge details value. Sent only on `reservation.closed` event. |
| dispute_notes | string | Reason of new price from executor side. Sent only on `reservation.closed` event. |



In 'execution' console you can see request/response samples, data types and sizes of parameters.

## Web Hook [/Web Hook]

To subscribe you need to specify the list of events and the url you would want to receive notifications on.

### Create Or Update [PUT /partners/self/subscriptions/webhook]
Allows you to specify the list of events you want to subscribe to.

+ Request
    + `url` (required, string) 
    + `events[]` (required, array[string]) 
        The count of elements should be greater or equals to 1. 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 

    + Body
        {
            "url": "http://some-partner.net",
            "events": [
                "reservation.cancelled",
                "reservation.closed"
            ]
        }

+ Response 204

### Delete [DELETE /partners/self/subscriptions/webhook]
Allows you to remove events you want to unsubscribe from.

+ Request
    + `url` (required, string) 
    + `events[]` (required, array[string]) 
        The count of elements should be greater or equals to 1. 
        
    + Headers 
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Content-Type: application/json;charset=utf-8 
        Authorization: bearer {access_token} 

    + Body
        {
            "url": "http://some-partner.net",
            "events": [
                "reservation.cancelled",
                "reservation.closed"
            ]
        }

+ Response 204



## Group Driver GPS

Provides the following abilities:

- Check current position of the driver for the reservation.


To check driver's position, you just need to have the `reservation_id`, 
received during booking the ride and call <a href="/#reference/driver-gps/get">gps</a> endpoint


The tables below describe all possible response parameters for the Reservation group methods:


#### *Get Driver GPS* response parameters

| Name | Type | Description |
|-----------------------------------------------|-----------|--------------------------------------------------------------------------------------|
| latitude | float | Latitude |
| longitude | float | Longitude |

In 'execution' console you can see request/response samples, data types and sizes of parameters.

### Get [GET /partners/self/reservations/{id}/driver/gps]
Returns current position of the driver for the reservation.


+ Parameters
    + `id`: `378` (required, int)

+ Request

    + Headers
        Accept-Encoding: gzip 
        Accept-Charset: utf-8 
        Accept: application/json 
        Authorization: bearer {access_token} 

+ Response 200
    + `latitude` (number) 
    + `longitude` (number) 
    
    + Headers 
        Content-Type: application/json; charset=utf-8 

    + Body
        {
            "latitude":"40.63975",
            "longitude":"-73.77892"
        }